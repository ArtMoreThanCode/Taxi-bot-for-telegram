from telebot import types
from db import USER, TAXI, SUM, PASS, ADMIN, NOTIFICATION
import telebot
from config import TOKEN, OWN_ADMIN

bot = telebot.TeleBot(TOKEN, parse_mode='Markdown')

count_zakaz = 0

@bot.message_handler(commands=['start'])
def start(message: types.Message):
    user = USER.check_user(message.chat.id)
    user_bun = USER.check_bun_user(message.chat.id)

    count = SUM.get_sum('city')[0]
    count2 = SUM.get_sum('suburb')[0]

    if user_bun != True:
        if user == None:
            markup = types.InlineKeyboardMarkup()
            item_1 = types.InlineKeyboardButton(text='–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è', callback_data='reg')
            markup.add(item_1)

            bot.send_message(message.chat.id, '–í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã! \n\n–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏', reply_markup=markup)

        else:
            if message.chat.id == OWN_ADMIN:
                markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                btn_1 = types.KeyboardButton(text='–í—ã—Å—Ç–∞–≤–∏—Ç—å —Ü–µ–Ω—É —Ç–∞—Ä–∏—Ñ–æ–≤')
                btn_2 = types.KeyboardButton(text='–í—ã—Å—Ç–∞–≤–∏—Ç—å —Ü–µ–Ω—É –¥–µ—Ä–µ–≤–Ω–∏')
                btn_3 = types.KeyboardButton(text='–î–æ–±–∞–≤–∏—Ç—å –≤–æ–¥–∏—Ç–µ–ª—è')
                btn_4 = types.KeyboardButton(text='–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')
                btn_5 = types.KeyboardButton(text='–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –≤–æ–¥–∏—Ç–µ–ª—è')
                btn_6 = types.KeyboardButton(text='–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π')
                btn_7 = types.KeyboardButton(text='–°–ø–∏—Å–æ–∫ –≤–æ–¥–∏—Ç–µ–ª–µ–π')
                btn_8 = types.KeyboardButton(text='–ö–æ–ª–ª-–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π')
                btn_9 = types.KeyboardButton(text='–ö–æ–ª–ª-–≤–æ –∑–∞–∫–∞–∑–æ–≤ –∑–∞ —Å–µ–≥–æ–¥–Ω—è')
                btn_10 = types.KeyboardButton(text='–°–¥–µ–ª–∞—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É —Å–æ–æ–±—â–µ–Ω–∏–π —Ç–∞–∫—Å–∏—Å—Ç–∞–º')
                btn_11 = types.KeyboardButton(text='–°–¥–µ–ª–∞—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É —Å–æ–æ–±—â–µ–Ω–∏–π –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º')
                item_1 = types.KeyboardButton(text='–ó–∞–∫–∞–∑–∞—Ç—å –º–∞—à–∏–Ω—É üöï')
                item_2 = types.KeyboardButton(text='–¢–µ—Ö. –ø–æ–¥–¥–µ—Ä–∂–∫–∞ ‚òé')
                markup.add(btn_1, btn_2, btn_3, btn_4, btn_5, btn_6, btn_7, btn_8, btn_9, btn_10, btn_11, item_1, item_2)

                bot.send_message(message.chat.id, f'–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –µ—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å —Ü–µ–Ω—É —Ç–∞—Ä–∏—Ñ–æ–≤. \n\n–†–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–Ω–∞—è —Ü–µ–Ω–∞ —Ç–∞—Ä–∏—Ñ–∞ –¥–ª—è –≥–æ—Ä–æ–¥–∞: {count}—Ä—É–±.\n–¶–µ–Ω—ã —Ç–∞—Ä–∏—Ñ–∞ –¥–ª—è –ø—Ä–∏–≥–æ—Ä–æ–¥–∞ —É—Ç–æ—á–Ω—è–π—Ç–µ —É –≤–æ–¥–∏—Ç–µ–ª—è!', reply_markup=markup)
            else:
                if TAXI.check_taxist(message.chat.id) == True:
                    if TAXI.get_tru_taxi(message.chat.id) == True:
                        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                        item_1 = types.KeyboardButton(text='–í—ã–π—Ç–∏ c –ª–∏–Ω–∏–∏')
                        balance = types.KeyboardButton(text='–í—ã—Ä—É—á–∫–∞ –∑–∞ —Å–µ–≥–æ–¥–Ω—è')
                        item_2 = types.KeyboardButton(text='–ó–∞–∫–∞–∑–∞—Ç—å –º–∞—à–∏–Ω—É üöï')
                        item_3 = types.KeyboardButton(text='–¢–µ—Ö. –ø–æ–¥–¥–µ—Ä–∂–∫–∞ ‚òé')
                        markup.add(item_1, item_2, item_3)

                        bot.send_message(message.chat.id, f'–ü—Ä–∏–≤–µ—Ç! –ß–µ—Ä–µ–∑ —ç—Ç–æ–≥–æ –±–æ—Ç–∞ —Ç—ã –º–æ–∂–µ—à—å —Ä–∞–±–æ—Ç–∞—Ç—å –≤ —Ç–∞–∫—Å–∏ –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É. –ò–ª–∏ —Å–æ–æ–±—â–∏—Ç—å –æ –ø—Ä–æ–±–ª–µ–º–µ –≤ –¢–µ—Ö. –ø–æ–¥–¥–µ—Ä–∂–∫—É \n\n–†–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–Ω–∞—è —Ü–µ–Ω–∞ —Ç–∞—Ä–∏—Ñ–∞ –¥–ª—è –≥–æ—Ä–æ–¥–∞: {count}—Ä—É–±.\n–¶–µ–Ω—ã —Ç–∞—Ä–∏—Ñ–∞ –¥–ª—è –ø—Ä–∏–≥–æ—Ä–æ–¥–∞ —É—Ç–æ—á–Ω—è–π—Ç–µ —É –≤–æ–¥–∏—Ç–µ–ª—è!', reply_markup=markup)
                    else:
                        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                        item_1 = types.KeyboardButton(text='–í—ã–π—Ç–∏ –Ω–∞ –ª–∏–Ω–∏—é')
                        item_2 = types.KeyboardButton(text='–ó–∞–∫–∞–∑–∞—Ç—å –º–∞—à–∏–Ω—É üöï')
                        item_3 = types.KeyboardButton(text='–¢–µ—Ö. –ø–æ–¥–¥–µ—Ä–∂–∫–∞ ‚òé')
                        markup.add(item_1, item_2)

                        bot.send_message(message.chat.id, f'–ü—Ä–∏–≤–µ—Ç! –ß–µ—Ä–µ–∑ —ç—Ç–æ–≥–æ –±–æ—Ç–∞ —Ç—ã –º–æ–∂–µ—à—å —Ä–∞–±–æ—Ç–∞—Ç—å –≤ —Ç–∞–∫—Å–∏ –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É. –ò–ª–∏ —Å–æ–æ–±—â–∏—Ç—å –æ –ø—Ä–æ–±–ª–µ–º–µ –≤ –¢–µ—Ö. –ø–æ–¥–¥–µ—Ä–∂–∫—É \n\n–†–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–Ω–∞—è —Ü–µ–Ω–∞ —Ç–∞—Ä–∏—Ñ–∞ –¥–ª—è –≥–æ—Ä–æ–¥–∞: {count}—Ä—É–±.\n–¶–µ–Ω—ã —Ç–∞—Ä–∏—Ñ–∞ –¥–ª—è –ø—Ä–∏–≥–æ—Ä–æ–¥–∞ —É—Ç–æ—á–Ω—è–π—Ç–µ —É –≤–æ–¥–∏—Ç–µ–ª—è!', reply_markup=markup)
                else:
                    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                    item_1 = types.KeyboardButton(text='–ó–∞–∫–∞–∑–∞—Ç—å –º–∞—à–∏–Ω—É üöï')
                    item_2 = types.KeyboardButton(text='–¢–µ—Ö. –ø–æ–¥–¥–µ—Ä–∂–∫–∞ ‚òé')
                    markup.add(item_2, item_1)

                    bot.send_message(message.chat.id, f'–ü—Ä–∏–≤–µ—Ç! –í —ç—Ç–æ–º –±–æ—Ç–µ —Ç—ã –º–æ–∂–µ—à—å –∑–∞–∫–∞–∑–∞—Ç—å –º–∞—à–∏–Ω—É –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É. –ò–ª–∏ —Å–æ–æ–±—â–∏—Ç—å –æ –ø—Ä–æ–±–ª–µ–º–µ –≤ –¢–µ—Ö. –ø–æ–¥–¥–µ—Ä–∂–∫—É \n\n–†–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–Ω–∞—è —Ü–µ–Ω–∞ —Ç–∞—Ä–∏—Ñ–∞ –¥–ª—è –≥–æ—Ä–æ–¥–∞: {count}—Ä—É–±.\n–¶–µ–Ω—ã —Ç–∞—Ä–∏—Ñ–∞ –¥–ª—è –ø—Ä–∏–≥–æ—Ä–æ–¥–∞ —É—Ç–æ—á–Ω—è–π—Ç–µ —É –≤–æ–¥–∏—Ç–µ–ª—è!', reply_markup=markup)
    else:
        bot.send_message(message.chat.id, '–í—ã –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã! \n–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —Ñ—É–Ω–∫—Ü–∏—è–º —ç—Ç–æ–≥–æ –±–æ—Ç–∞!')

@bot.message_handler(content_types=['text'])
def text(message: types.Message):
    user_id = message.chat.id

    try:
        if message.text == '–ó–∞–∫–∞–∑–∞—Ç—å –º–∞—à–∏–Ω—É üöï':
            user = TAXI.check_client(user_id)
            
            rt = TAXI.random_taxist()

            if rt == None:
                markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                item = types.InlineKeyboardButton(text='–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data='start')
                markup.add(item)
                
                bot.send_message(message.chat.id, '–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –≤–æ–¥–∏—Ç–µ–ª–µ–π –Ω–∞ –ª–∏–Ω–∏–∏ –Ω–µ—Ç. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –∑–∞–∫–∞–∑ —á–µ—Ä–µ–∑ 5 –º–∏–Ω—É—Ç', reply_markup=markup)
            else:
                if user == None:
                    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
                    btn1 = types.KeyboardButton(text='–ì–æ—Ä–æ–¥ üèô')
                    btn2 = types.KeyboardButton(text='–ü—Ä–∏–≥–æ—Ä–æ–¥ üå≥')
                    markup.add(btn1, btn2)
        
                    bot.send_message(user_id, '–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∞—Ä–∏—Ñ', reply_markup=markup)
                    bot.register_next_step_handler(message, ta)
                else:
                    bot.send_message(user_id, '–í—ã —É–∂–µ –∑–∞–∫–∞–∑–∞–ª–∏ –º–∞—à–∏–Ω—É, –æ–∂–∏–¥–∞–π—Ç–µ!')

        elif message.text == '–¢–µ—Ö. –ø–æ–¥–¥–µ—Ä–∂–∫–∞ ‚òé':
            bot.send_message(message.chat.id, '–ù–∞–ø–∏—à–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –∏ —è –æ—Ç–ø—Ä–∞–≤–ª—é –µ–≥–æ –≤ –¢–µ—Ö. –ü–æ–¥–¥–µ—Ä–∂–∫—É')
            bot.register_next_step_handler(message, rep)

        elif message.text == '–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
            start(message)
        
        elif message.text == '–í—ã—Å—Ç–∞–≤–∏—Ç—å —Ü–µ–Ω—É —Ç–∞—Ä–∏—Ñ–æ–≤':
            if message.chat.id == OWN_ADMIN:
                markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
                btn1 = types.KeyboardButton(text='–ì–æ—Ä–æ–¥ üèô')
                btn2 = types.KeyboardButton(text='–ü—Ä–∏–≥–æ—Ä–æ–¥ üå≥')
                markup.add(btn1, btn2)

                bot.send_message(user_id, '–í—ã–±–µ—Ä–∏—Ç–µ –æ–±–ª–∞—Å—Ç—å –≤ –∫–æ—Ç–æ—Ä–æ–π —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å —Ü–µ–Ω—É', reply_markup=markup)
                bot.register_next_step_handler(message, rate)
        
        elif message.text == '–í—ã–π—Ç–∏ –Ω–∞ –ª–∏–Ω–∏—é':
            if TAXI.check_taxist(message.chat.id) == True:
                markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                item_1 = types.KeyboardButton(text='–í—ã–π—Ç–∏ —Å –ª–∏–Ω–∏–∏')
                item_2 = types.KeyboardButton(text='–¢–µ—Ö. –ø–æ–¥–¥–µ—Ä–∂–∫–∞ ‚òé')
                markup.add(item_1, item_2)

                TAXI.insert_taxist_line(user_id)
                bot.send_message(user_id, '–í—ã —É—Å–ø–µ—à–Ω–æ –≤—ã—à–ª–∏ –Ω–∞ –ª–∏–Ω–∏—é! –ò—â–µ–º –¥–ª—è –≤–∞—Å –∑–∞–∫–∞–∑ ‚è≥', reply_markup=markup)
        
        elif message.text == '–í—ã–π—Ç–∏ c –ª–∏–Ω–∏–∏':
            if TAXI.check_taxist(message.chat.id) == True:
                markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                item_1 = types.KeyboardButton(text='–í—ã–π—Ç–∏ –Ω–∞ –ª–∏–Ω–∏—é')
                item_2 = types.KeyboardButton(text='–¢–µ—Ö. –ø–æ–¥–¥–µ—Ä–∂–∫–∞ ‚òé')
                markup.add(item_1, item_2)

                TAXI.del_taxist_line(user_id)
                bot.send_message(user_id, '–î–æ —Å–≤—è–∑–∏!', reply_markup=markup)
        
        elif message.text == '–î–æ–±–∞–≤–∏—Ç—å –≤–æ–¥–∏—Ç–µ–ª—è':
            if user_id == OWN_ADMIN:
                bot.send_message(user_id, '–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å –¥–ª—è –≤–æ–¥–∏—Ç–µ–ª—è.')
                bot.register_next_step_handler(message, insert_taxist)
        
        elif message.text == '–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª':
            if user_id == OWN_ADMIN:
                bot.send_message(user_id, '–í–≤–µ–¥–∏—Ç–µ `ID` –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')
                bot.register_next_step_handler(message, bun_user)

        elif message.text == '–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π':
            if user_id == OWN_ADMIN:
                user = USER.user_list()
        
                for row in user:
                    id = row[0]
                    name = row[1]
                    phone = row[2]

                    bot.send_message(user_id, f'\n\n__<------------------------------------------------->\n\n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: `{name}` \nID: `{id}` \n–°–æ—Ç–æ–≤—ã–π —Ç–µ–ª–µ—Ñ–æ–Ω: `{phone}`\n\n<------------------------------------------------->__\n\n')
        
        elif message.text == '–°–ø–∏—Å–æ–∫ –≤–æ–¥–∏—Ç–µ–ª–µ–π':
            if user_id == OWN_ADMIN:
                user = USER.tax_list()
        
                for row in user:
                    id = row[0]
                    name = row[1]
                    phone = row[2]

                    bot.send_message(user_id, f'\n\n__<------------------------------------------------->\n\n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: `{name}` \nID: `{id}` \n–°–æ—Ç–æ–≤—ã–π —Ç–µ–ª–µ—Ñ–æ–Ω: `{phone}`\n\n<------------------------------------------------->__\n\n')

        elif message.text == '–ö–æ–ª–ª-–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π':
            if user_id == OWN_ADMIN:
                count_user = USER.count_users()
                bot.send_message(user_id, f'–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –≤ –±–æ—Ç–µ: `{count_user}` –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π')

        elif message.text == '–ö–æ–ª–ª-–≤–æ –∑–∞–∫–∞–∑–æ–≤ –∑–∞ —Å–µ–≥–æ–¥–Ω—è':
            if user_id == OWN_ADMIN:
                bot.send_message(user_id, f'–°–µ–≥–æ–¥–Ω—è –±—ã–ª–æ —Å–¥–µ–ª–∞–Ω–æ: `{count_zakaz}` –∑–∞–∫–∞–∑–æ–≤')
        
        elif message.text == '–í—ã—Ä—É—á–∫–∞ –∑–∞ –≤—Å—ë –≤—Ä–µ–º—è':
            if TAXI.check_taxist(message.chat.id) == True:
                sum_day = USER.get_sum_day(user_id)

                bot.send_message(user_id, f'–í–∞—à–∞ –≤—ã—Ä—É—á–∫–∞ –∑–∞ –≤—Å—ë –≤—Ä–µ–º—è —Å–æ—Å—Ç–æ–≤–ª—è–µ—Ç: `{sum_day}`—Ä—É–±.')
        
        elif message.text == '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –≤–æ–¥–∏—Ç–µ–ª—è':
            if user_id == OWN_ADMIN:
                bot.send_message(user_id, '–í–≤–µ–¥–∏—Ç–µ –§–ò–û –≤–æ–¥–∏—Ç–µ–ª—è –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å')
                bot.register_next_step_handler(message, edit_taxists)
        
        elif message.text == '–°–¥–µ–ª–∞—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É —Å–æ–æ–±—â–µ–Ω–∏–π —Ç–∞–∫—Å–∏—Å—Ç–∞–º':
            admin = ADMIN.get_admin()

            admins = []
            
            for row in admin:
                admins.append(int(row[0]))

            if user_id == OWN_ADMIN:
                bot.send_message(user_id, '–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç —Ä–∞—Å—Å—ã–ª–∫–∏')
                bot.register_next_step_handler(message, tax_notific)
            else:
                print(admins)
                if user_id in admins:
                    bot.send_message(user_id, '–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç —Ä–∞—Å—Å—ã–ª–∫–∏')
                    bot.register_next_step_handler(message, tax_notific)

        elif message.text == '–°–¥–µ–ª–∞—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É —Å–æ–æ–±—â–µ–Ω–∏–π –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º':
            adm = ADMIN.get_admin()
            for row in adm:
                if user_id == OWN_ADMIN or user_id in adm[0]:
                    bot.send_message(user_id, '–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç —Ä–∞—Å—Å—ã–ª–∫–∏')
                    bot.register_next_step_handler(message, notific)

        else:
            if message.text == PASS.get_pass(message.text)[0]:
                bot.send_message(message.chat.id, '–ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à–µ –§–ò–û')
                bot.register_next_step_handler(message, reg_taxist)
                PASS.del_pred_pass(message.text)
            else:
                bot.send_message(user_id, '–Ø –Ω–µ –∑–Ω–∞—é —Ç–∞–∫—É—é –∫–æ–º–∞–Ω–¥—É :/')
    except:
        pass

def tax_notific(message):
    text = message.text
    users = NOTIFICATION.notific_taxist()

    list = []

    for row in users:
        list.append(row[0])
    for user in list:
        print(user)
        bot.send_message(user, text)

    bot.send_message(message.chat.id, '–°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!')

def notific(message):
    text = message.text
    users = NOTIFICATION.notific()
    
    list = []

    for row in users:
        list.append(row[0])
    for user in list:
        print(user)
        bot.send_message(user, text)

    bot.send_message(message.chat.id, '–°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!')

def edit_taxists(message):
    user = message.text

    if USER.check_taxist(user) == True:
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        name = types.KeyboardButton(text='–ò–∑–º–µ–Ω–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –§–ò–û')
        phone = types.KeyboardButton(text='–ò–∑–º–µ–Ω–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–æ–º–µ—Ä–µ —Ç–µ–ª–µ—Ñ–æ–Ω–∞')
        car = types.KeyboardButton(text='–ò–∑–º–µ–Ω–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –º–∞—à–∏–Ω–µ')
        markup.add(name, phone, car)

        bot.send_message(message.chat.id, '–û—Ç–ª–∏—á–Ω–æ! –¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏—Ç–µ —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å —É —ç—Ç–æ–≥–æ –≤–æ–¥–∏—Ç–µ–ª—è', reply_markup=markup)
        bot.register_next_step_handler(message, edit_taxists_next, user)
    else:
        bot.send_message(message.chat.id, '–¢–∞–∫–æ–≥–æ –≤–æ–¥–∏—Ç–µ–ª—è –Ω–µ—Ç –≤ –±–∞–∑–µ!')
        start(message)

def edit_taxists_next(message, user):
    edited = message.text

    if edited == '–ò–∑–º–µ–Ω–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –§–ò–û':
        bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –∫–æ—Ç–æ—Ä—ã–µ —Ö–æ—Ç–∏—Ç–µ –∑–∞–ø–∏—Å–∞—Ç—å –≤–º–µ—Å—Ç–æ —Å—Ç–∞—Ä—ã—Ö')
        bot.register_next_step_handler(message, edit_name, user)
    elif edited == '–ò–∑–º–µ–Ω–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–æ–º–µ—Ä–µ —Ç–µ–ª–µ—Ñ–æ–Ω–∞':
        bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –∫–æ—Ç–æ—Ä—ã–µ —Ö–æ—Ç–∏—Ç–µ –∑–∞–ø–∏—Å–∞—Ç—å –≤–º–µ—Å—Ç–æ —Å—Ç–∞—Ä—ã—Ö')
        bot.register_next_step_handler(message, edit_phone, user)
    elif edited == '–ò–∑–º–µ–Ω–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –º–∞—à–∏–Ω–µ':
        bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –∫–æ—Ç–æ—Ä—ã–µ —Ö–æ—Ç–∏—Ç–µ –∑–∞–ø–∏—Å–∞—Ç—å –≤–º–µ—Å—Ç–æ —Å—Ç–∞—Ä—ã—Ö')
        bot.register_next_step_handler(message, edit_car, user)

def edit_name(message, user):
    name = message.text
    USER.edit_driver(user, 'full_name', name)
    bot.send_message(message.chat.id, '–û—Ç–ª–∏—á–Ω–æ! –í—ã —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–∏–ª–∏ –¥–∞–Ω–Ω—ã–µ!')
    start(message)

def edit_phone(message, user):
    phone = message.text
    USER.edit_driver(user, 'phone', phone)
    bot.send_message(message.chat.id, '–û—Ç–ª–∏—á–Ω–æ! –í—ã —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–∏–ª–∏ –¥–∞–Ω–Ω—ã–µ!')
    start(message)

def edit_car(message, user):
    car = message.text
    USER.edit_driver(user, 'car', car)
    bot.send_message(message.chat.id, '–û—Ç–ª–∏—á–Ω–æ! –í—ã —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–∏–ª–∏ –¥–∞–Ω–Ω—ã–µ!')
    start(message)

def bun_user(message):
    id = message.text

    try:
        bun = USER.check_bun_user(id)
        if bun == True:
            bot.send_message(message.chat.id, '–≠—Ç–æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω!')
        else:
            USER.bun_user(id)
            bot.send_message(message.chat.id, '–í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è!')
            start(message)
            bot.send_message(id, '–í–∞—Å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª–∏! \n–≠—Ç–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –Ω–µ –≤—Ä–µ–º–µ–Ω–Ω–∞—è, –≤—ã –±–æ–ª—å—à–µ –Ω–µ –ø–æ–ª—É—á–∏—Ç–µ –¥–æ—Å—Ç—É–ø –∫ —Ñ—É–Ω–∫—Ü–∏—è–º —ç—Ç–æ–≥–æ –±–æ—Ç–∞. \n–£–¥–∞—á–∏!')
    except:
        bot.send_message(message.chat.id, '–í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞!')
        start(message)

def reports(user, text):
    adm = ADMIN.get_admin()
    for row in adm:
        ad = row[0]
        bot.send_message(ad, f'–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–æ–≤–∞—Ç–µ–ª—è: @{user} \n\n–°–æ–æ–±—â–µ–Ω–∏–µ: `{text}`')

def rep(message):
    text = message.text

    reports(message.from_user.username, text)
    
    bot.send_message(message.chat.id, '–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ –≤ –¢–µ—Ö. –ü–æ–¥–¥–µ—Ä–∂–∫—É')

def reg(message):
    phone = message.text
    
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item = types.InlineKeyboardButton(text='–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data='start')
    markup.add(item)
    
    user = USER.register(message.chat.id, message.from_user.first_name, phone)
    
    bot.send_message(message.chat.id, user, reply_markup=markup)

def insert_taxist(message):
    password = message.text
    PASS.set_pass(password)
    bot.send_message(message.chat.id, f'–û—Ç–ª–∏—á–Ω–æ! –¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —ç—Ç–æ—Ç –ø–∞—Ä–æ–ª—å: `{password}` –≤–æ–¥–∏—Ç–µ–ª—é.')

def reg_taxist(message):
    full_name = message.text
    bot.send_message(message.chat.id, '–¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –≤ —Ç–∞–∫–æ–º –≤–∏–¥–µ: +71002003040')
    bot.register_next_step_handler(message, reg_car, full_name)

def reg_car(message, full_name):
    phone = message.text
    bot.send_message(message.chat.id, '–¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π –Ω–æ–º–µ—Ä –º–∞—à–∏–Ω—ã –≤ —Ç–∞–∫–æ–º –≤–∏–¥–µ: *123*')
    bot.register_next_step_handler(message, reg_tax, full_name, phone)

def reg_tax(message, full_name, phone):
    car = message.text
    user_id = message.chat.id
    
    tax = USER.check_taxist(user_id)

    if tax == True:
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        item = types.InlineKeyboardButton(text='–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data='start')
        markup.add(item)

        bot.send_message(user_id, '–í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –∫–∞–∫ –≤–æ–¥–∏—Ç–µ–ª—å!', reply_markup=markup)

    USER.reg_taxist(user_id, full_name, phone, car)

    bot.send_message(message.chat.id, f'–ü—Ä–µ–≤–æ—Å—Ö–æ–¥–Ω–æ! –†–∞–¥—ã –≤–∏–¥–µ—Ç—å –≤–∞—Å: `{full_name}` –≤ –Ω–∞—à–µ–π –∫–æ–º–∞–Ω–¥–µ!')

def rate(message):
    rate = message.text

    bot.send_message(message.chat.id, "–û—Ç–ª–∏—á–Ω–æ! –¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –¥–ª—è —ç—Ç–æ–π –æ–±–ª–∞—Å—Ç–∏")
    bot.register_next_step_handler(message, sum_rate, rate)

def sum_rate(message, rate):
    sum = int(message.text)

    if sum != int:
        bot.send_message(message.chat.id, '–≠—Ç–æ –Ω–µ —á–∏—Å–ª–æ!')
        start(message)
    
    if rate == '–ì–æ—Ä–æ–¥ üèô':
        SUM.insert_sum(sum, 'city')

    elif rate == '–ü—Ä–∏–≥–æ—Ä–æ–¥ üå≥':
        SUM.insert_sum(sum, 'suburb')

    bot.send_message(message.chat.id, f'–í—ã —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–∏–ª–∏ —Ü–µ–Ω—É: `{sum}`—Ä—É–±. –¥–ª—è: `{rate}`')
    start(message)

def ta(message):
    rate = message.text

    if "–ì–æ—Ä–æ–¥" in rate or "–ü—Ä–∏–≥–æ—Ä–æ–¥" in rate:
        markup = types.ReplyKeyboardRemove()
        bot.send_message(message.chat.id, '–û—Ç–ª–∏—á–Ω–æ! –¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∞–¥—Ä–µ—Å –æ—Ç–∫—É–¥–∞ –≤–∞—Å –Ω—É–∂–Ω–æ –∑–∞–±—Ä–∞—Ç—å', reply_markup=markup)
        bot.register_next_step_handler(message, tax, rate)
    else:
        bot.send_message(message.chat.id, '–¢–∞–∫–æ–π —Ç–∞—Ä–∏—Ñ –Ω–µ –Ω–∞–π–¥–µ–Ω... –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –∑–∞–∫–∞–∑!')
        start(message)

def tax(message, rate):
    _in = message.text
    bot.send_message(message.chat.id, '–û—Ç–ª–∏—á–Ω–æ! –¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∞–¥—Ä–µ—Å –∫—É–¥–∞ –≤–∞—Å –Ω—É–∂–Ω–æ –æ—Ç–≤–µ–∑—Ç–∏')
    bot.register_next_step_handler(message, taxi, rate, _in)
    
def taxi(message, rate, _in, _out=None, client_id=None, ret=3, clos=0, mes_id=0):
    if rate == '–ì–æ—Ä–æ–¥ üèô' or rate == 'city':
        count = SUM.get_sum('city')[0]

    if rate == '–ü—Ä–∏–≥–æ—Ä–æ–¥ üå≥' or rate == 'suburb':
        count = SUM.get_sum('suburb')[0]

    if clos == 0:
        remove = types.ReplyKeyboardRemove()
        bot.send_message(message.chat.id, '–í–∞—à –∑–∞–∫–∞–∑ –æ–∂–∏–¥–∞–µ—Ç –ø—Ä–∏–Ω—è—Ç–∏—è –≤–æ–¥–∏—Ç–µ–ª–µ–º. –û–∂–∏–¥–∞–π—Ç–µ‚åõ', reply_markup=remove)
            
    if ret == 1:
        markup = types.InlineKeyboardMarkup()
        btn = types.InlineKeyboardButton(text='–ó–∞–≤–µ—Ä—à–∏—Ç—å –∑–∞–∫–∞–∑', callback_data='cloz_zakaz')
        btn1 = types.InlineKeyboardButton(text='–Ø –Ω–∞ –º–µ—Å—Ç–µ', callback_data='i_go')
        markup.add(btn, btn1)

        cl_markup = types.ReplyKeyboardRemove()

        TAXI.accept(message.chat.id, client_id)
        TAXI.del_taxi(client_id)

        taxist_nm = TAXI.get_taxist_name(message.chat.id)[0]
        taxist_ph = TAXI.get_taxist_phone(message.chat.id)[0]
        taxist_car = TAXI.get_taxist_car(message.chat.id)[0]

        count_zakaz + 1

        USER.insert_sum_day(message.chat.id, count)
        
        bot.send_message(message.chat.id, '–í—ã –ø—Ä–∏–Ω—è–ª–∏ –∑–∞–∫–∞–∑! –ö–æ–≥–¥–∞ –ø—Ä–∏–µ–¥–∏—Ç–µ –Ω–∞ –º–µ—Å—Ç–æ –æ—Ç–∫—É–¥–∞ –Ω–∞–¥–æ –∑–∞–±—Ä–∞—Ç—å - –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É: `–Ø –Ω–∞ –º–µ—Å—Ç–µ` \n\n–ß—Ç–æ –±—ã –∑–≤–µ—Ä—à–∏—Ç—å –ø–æ–µ–∑–¥–∫—É, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É: `–ó–∞–≤–µ—Ä—à–∏—Ç—å –∑–∞–∫–∞–∑`', reply_markup=markup)
        
        bot.send_message(client_id, f'–í–æ–¥–∏—Ç–µ–ª—å: `{taxist_nm}` –ø—Ä–∏–Ω—è–ª –≤–∞—à –∑–∞–∫–∞–∑! \n\n–ï–≥–æ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω –¥–ª—è —Å–≤—è–∑–∏: `{taxist_ph}` \n–ï–≥–æ –º–∞—à–∏–Ω–∞: `{taxist_car}` \n\n–ö–æ–≥–¥–∞ –≤–∞—à–∞ –ø–æ–µ–∑–¥–∫–∞ –∑–∞–∫–æ–Ω—á–∏—Ç—Å—è, –ø–æ–ø—Ä–æ—Å–∏—Ç–µ –≤–æ–¥–∏—Ç–µ–ª—è –∑–∞–≤–µ—Ä—à–∏—Ç—å –∑–∞–∫–∞–∑!', reply_markup=cl_markup)
    
    if ret == 2:
        user = TAXI.random_taxist()

        if user != None:
            markup = types.InlineKeyboardMarkup(row_width=1)
            accept = types.InlineKeyboardButton(text='–ü—Ä–∏–Ω—è—Ç—å –∑–∞–∫–∞–∑ ‚úÖ', callback_data=f'accept_{message.chat.id}')
            close = types.InlineKeyboardButton(text='–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑ ‚ùå', callback_data=f'close_{message.chat.id}')
            markup.add(accept, close)

            bot.send_message(user, f'–ù–æ–≤—ã–π –∑–∞–∫–∞–∑! \n\n–ò–∑: `{_in}`\n –í: `{_out}` \n\n–°—É–º–º–∞: `{count}`—Ä—É–±.', reply_markup=markup)
        
    if ret == 3:
        _out = message.text
            
        TAXI.client(message.chat.id, rate, _in, _out)
        user = TAXI.random_taxist()

        if user != None:
            markup = types.InlineKeyboardMarkup(row_width=1)
            accept = types.InlineKeyboardButton(text='–ü—Ä–∏–Ω—è—Ç—å –∑–∞–∫–∞–∑ ‚úÖ', callback_data=f'accept_{message.chat.id}')
            close = types.InlineKeyboardButton(text='–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑ ‚ùå', callback_data=f'close_{message.chat.id}')
            markup.add(accept, close)

            bot.send_message(user, f'–ù–æ–≤—ã–π –∑–∞–∫–∞–∑! \n\n–û–∫—Ä—É–≥: `{rate}` \n\n–ò–∑: `{_in}`\n –í: `{_out}`\n\n –°—É–º–º–∞: `{count}`', reply_markup=markup)
        
def comment(message, client, user_id):
    tax_name = TAXI.get_taxist_name(user_id)[0]

    coment = message.text

    bot.send_message(OWN_ADMIN, f'–ù–æ–≤—ã–π –æ—Ç–∑—ã–≤ –æ –≤–æ–¥–∏—Ç–µ–ª–µ! \n\n–ò–º—è –≤–æ–¥–∏—Ç–µ–ª—è: `{tax_name}` \n–û—Ç–∑—ã–≤: *{coment}*')

    bot.send_message(client, '–°–ø–∞—Å–∏–±–æ –∑–∞ –æ—Ç–∑—ã–≤! –° –ø–æ–º–æ—â—å—é –≤–∞—Å –º—ã –¥–µ–ª–∞–µ–º –Ω–∞—à —Å–µ—Ä–≤–∏—Å –ª—É—á—à–µ!')

@bot.callback_query_handler(func=lambda call: True)
def callback(call: types.CallbackQuery):
    user_id = call.message.chat.id
    message = call.message

    if call.data == 'reg':
        bot.send_message(user_id, '–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –≤ —Ç–∞–∫–æ–º –≤–∏–¥–µ: +71002003040')
        bot.register_next_step_handler(message, reg)
    
    elif call.data == 'start':
        start(message)

    elif 'accept' in call.data:
        us_id = call.data.split('_')[1]
        user = TAXI.get_taxi(us_id)

        for row in user:
            usr_id = row[0]
            rate = row[1]
            _in = row[2]
            _out = row[3]
            
            markup = types.ReplyKeyboardMarkup()
            bot.edit_message_reply_markup(user_id, message.id, reply_markup=markup)

            taxi(message, rate=rate, _in=_in, _out=_out, client_id=usr_id, ret=1, clos=1, mes_id=message.id)


    elif 'close' in call.data:
        bot.delete_message(user_id, message.id)

        client_id = call.data.split('_')[1]
        
        user = TAXI.get_taxi(client_id)

        for row in user:
            usr_id = row[0]
            rate = row[1]
            _in = row[2]
            _out = row[3]

            taxi(message, rate=rate, _in=_in, _out=_out, client_id=client_id, ret=2, clos=1)
    
    elif 'cloz_zakaz' in call.data:
        bot.delete_message(user_id, message.id)

        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        item_1 = types.KeyboardButton(text='–ó–∞–∫–∞–∑–∞—Ç—å –º–∞—à–∏–Ω—É üöï')
        item_2 = types.KeyboardButton(text='–¢–µ—Ö. –ø–æ–¥–¥–µ—Ä–∂–∫–∞ ‚òé')
        markup.add(item_2, item_1)

        tax_markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        item_1 = types.KeyboardButton(text='–í—ã–π—Ç–∏ c –ª–∏–Ω–∏–∏')
        item_2 = types.KeyboardButton(text='–¢–µ—Ö. –ø–æ–¥–¥–µ—Ä–∂–∫–∞ ‚òé')
        markup.add(item_1, item_2)

        user = TAXI.get_client_taxi(user_id)[0]

        if user != None:
            TAXI.close_zakaz(user_id)

            bot.send_message(user_id, '–í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–∏–ª–∏ –ø–æ–µ–∑–¥–∫—É!', reply_markup=tax_markup)
            
            msg = bot.send_message(user, '–ü–æ–µ–∑–¥–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –û—Å—Ç–∞–≤—å—Ç–µ –æ—Ç–∑—ã–≤ –æ –≤–æ–¥–∏—Ç–µ–ª–µ:')
            bot.register_next_step_handler(msg, comment, user, user_id)
        else:
            bot.send_message(user_id, '–£ –≤–∞—Å –Ω–µ—Ç –ø–æ–µ–∑–¥–∫–∏ —á—Ç–æ –±—ã –µ—ë –∑–∞–≤–µ—Ä—à–∏—Ç—å!')
    
    elif 'i_go' in call.data:
        taxist = TAXI.check_taxist(user_id)

        if taxist == True:
            client = TAXI.get_client_taxi(user_id)[0]            
            
            if client != None:
                bot.send_message(client, '–í–æ–¥–∏—Ç–µ–ª—å –ø–æ–¥—ä–µ—Ö–∞–ª –∫ –≤–∞–º!')
    
    elif call.data == 'insert_sum':
        SUM.insert_sum(int(message.text))
        bot.send_message(user_id, f'–í—ã —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–∏–ª–∏ —Å—É–º–º—É –∑–∞–∫–∞–∑–æ–≤ –Ω–∞ {message.text}')

if __name__ == '__main__':
    try:
        print('–ë–æ—Ç –≤ —Å–µ—Ç–∏!')
        bot.polling()   
    except Exception as e:
        for adm in ADMIN.get_admin()[0]:
            admin = adm
            bot.send_message(admin, f'–û—à–∏–±–∫–∞ –±–æ—Ç–∞! \n\n–û–ø–∏—Å–∞–Ω–∏–µ –æ—à–∏–±–∫–∏: {e}')
        
        bot.polling()